pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = 'myregistry.com'
        K8S_NAMESPACE = 'realtime-analytics'
    }
    stages {
        stage('Build') {
            parallel {
                stage('Build User Simulator') {
                    steps {
                        dir('user-simulator') {
                            sh 'docker build -t ${DOCKER_REGISTRY}/user-simulator:${GIT_COMMIT} .'
                        }
                    }
                }
                stage('Build Spark Streaming') {
                    steps {
                        dir('spark-streaming') {
                            sh 'docker build -t ${DOCKER_REGISTRY}/spark-streaming:${GIT_COMMIT} .'
                        }
                    }
                }
            }
        }
        stage('Test') {
            steps {
                sh 'docker-compose -f docker-compose.test.yml up -d'
                sh 'sleep 30'
                sh 'python tests/integration_test.py'
            }
            post {
                always {
                    sh 'docker-compose -f docker-compose.test.yml down'
                }
            }
        }
        stage('Deploy') {
            steps {
                sh "kubectl config set-context --current --namespace=${K8S_NAMESPACE}"
                sh "kubectl apply -f k8s-manifests/"
                sh "kubectl set image deployment/user-simulator user-simulator=${DOCKER_REGISTRY}/user-simulator:${GIT_COMMIT}"
                sh "kubectl set image deployment/spark-streaming spark-streaming=${DOCKER_REGISTRY}/spark-streaming:${GIT_COMMIT}"
            }
        }
    }
    post {
        success {
            slackSend channel: '#deployments', message: "Real-time Analytics deployed successfully: ${env.BUILD_URL}"
        }
        failure {
            slackSend channel: '#deployments', message: "Real-time Analytics deployment failed: ${env.BUILD_URL}"
        }
    }
}